--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Inserts multiple records into the associated table. This method can be to efficiently insert a large amounts of records into a table. Inserts are automatically wrapped in a transaction.
- !ruby/struct:SM::Flow::P 
  body: "This method is called with a columns array and an array of value arrays:"
- !ruby/struct:SM::Flow::VERB 
  body: "  dataset.import([:x, :y], [[1, 2], [3, 4]])\n"
- !ruby/struct:SM::Flow::P 
  body: "This method also accepts a dataset instead of an array of value arrays:"
- !ruby/struct:SM::Flow::VERB 
  body: "  dataset.import([:x, :y], other_dataset.select(:a___x, :b___y))\n"
- !ruby/struct:SM::Flow::P 
  body: "The method also accepts a :slice or :commit_every option that specifies the number of records to insert per transaction. This is useful especially when inserting a large number of records, e.g.:"
- !ruby/struct:SM::Flow::VERB 
  body: "  # this will commit every 50 records\n  dataset.import([:x, :y], [[1, 2], [3, 4], ...], :slice =&gt; 50)\n"
full_name: Sequel::Dataset#import
is_singleton: false
name: import
params: (columns, values, opts={})
visibility: public
