--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: convert_tinyint_to_bool
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: convert_two_digit_years
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: datetime_class
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: virtual_row_instance_eval
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: Model
- !ruby/object:RI::MethodSummary 
  name: condition_specifier?
- !ruby/object:RI::MethodSummary 
  name: connect
- !ruby/object:RI::MethodSummary 
  name: identifier_input_method=
- !ruby/object:RI::MethodSummary 
  name: identifier_output_method=
- !ruby/object:RI::MethodSummary 
  name: inflections
- !ruby/object:RI::MethodSummary 
  name: load_gem
- !ruby/object:RI::MethodSummary 
  name: quote_identifiers=
- !ruby/object:RI::MethodSummary 
  name: require
- !ruby/object:RI::MethodSummary 
  name: single_threaded=
- !ruby/object:RI::MethodSummary 
  name: string_to_date
- !ruby/object:RI::MethodSummary 
  name: string_to_datetime
- !ruby/object:RI::MethodSummary 
  name: string_to_time
- !ruby/object:RI::MethodSummary 
  name: version
comment: 
- !ruby/struct:SM::Flow::P 
  body: Top level module for Sequel
- !ruby/struct:SM::Flow::P 
  body: "There are some class methods that are added via metaprogramming, one for each supported adapter. For example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  DB = Sequel.sqlite # Memory database\n  DB = Sequel.sqlite('blog.db')\n  DB = Sequel.postgres('database_name', :user=&gt;'user',\n         :password=&gt;'password', :host=&gt;'host', :port=&gt;5432,\n         :max_connections=&gt;10)\n"
- !ruby/struct:SM::Flow::P 
  body: "If a block is given to these methods, it is passed the opened Database object, which is closed (disconnected) when the block exits, just like a block passed to connect. For example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Sequel.sqlite('blog.db'){|db| puts db[:users].count}\n"
- !ruby/struct:SM::Flow::P 
  body: "Sequel converts the column type tinyint to a boolean by default, you can override the conversion to use tinyint as an integer:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Sequel.convert_tinyint_to_bool = false\n"
- !ruby/struct:SM::Flow::P 
  body: "Sequel converts two digit years in Dates and DateTimes by default, so 01/02/03 is interpreted at January 2nd, 2003, and 12/13/99 is interpreted as December 13, 1999. You can override this to treat those dates as January 2nd, 0003 and December 13, 0099, respectively, by setting:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Sequel.convert_two_digit_years = false\n"
- !ruby/struct:SM::Flow::P 
  body: "Sequel can use either Time or DateTime for times returned from the database. It defaults to Time. To change it to DateTime, use:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Sequel.datetime_class = DateTime\n"
- !ruby/struct:SM::Flow::P 
  body: You can set the SEQUEL_NO_CORE_EXTENSIONS constant or environment variable to have Sequel not extend the core classes.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: SELECT_SERIAL_SEQUENCE
  value: "proc do |schema, table| <<-end_sql         SELECT  '\"' || name.nspname || '\".' || seq.relname || ''         FROM pg_class seq, pg_attribute attr, pg_depend dep,           pg_namespace name, pg_constraint cons         WHERE seq.oid = dep.objid           AND seq.relnamespace  = name.oid           AND seq.relkind = 'S'           AND attr.attrelid = dep.refobjid           AND attr.attnum = dep.refobjsubid           AND attr.attrelid = cons.conrelid           AND attr.attnum = cons.conkey[1]           AND cons.contype = 'p'           #{\"AND name.nspname = '#{schema}'\" if schema}           AND seq.relname = '#{table}'       end_sql"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Hash of adapters that have been used. The key is the adapter scheme symbol, and the value is the Database subclass.
  name: ADAPTER_MAP
  value: "{}"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Array of all databases to which Sequel has connected. If you are developing an application that can connect to an arbitrary number of databases, delete the database objects from this or they will not get garbage collected.
  name: DATABASES
  value: "[]"
- !ruby/object:RI::Constant 
  comment: 
  name: MAJOR
  value: "3"
- !ruby/object:RI::Constant 
  comment: 
  name: MINOR
  value: "0"
- !ruby/object:RI::Constant 
  comment: 
  name: TINY
  value: "0"
- !ruby/object:RI::Constant 
  comment: 
  name: VERSION
  value: "[MAJOR, MINOR, TINY].join('.')"
full_name: Sequel
includes: []

instance_methods: []

name: Sequel
superclass: 
