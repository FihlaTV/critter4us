--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Which columns should be the only columns allowed in a call to set (default: not set, so all columns not otherwise restricted)."
  name: allowed_columns
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Array of modules that extend this model's dataset. Stored so that if the model's dataset is changed, it will be extended with all of these modules.
  name: dataset_method_modules
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Hash of dataset methods with method name keys and proc values that are stored so when the dataset changes, methods defined with def_dataset_method will be applied to the new dataset.
  name: dataset_methods
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The primary key for the class. Sequel can determine this automatically for many databases, but not all, so you may need to set it manually. If not determined automatically, the default is :id.
  name: primary_key
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Whether to raise an error instead of returning nil on a failure to save/create/save_changes/etc due to a validation failure or a before_* hook returning false.
  name: raise_on_save_failure
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Whether to raise an error when unable to typecast data for a column (default: true). This should be set to false if you want to use validations to display nice error messages to the user (e.g. most web applications). You can use the validates_not_string validations (from either the validation_helpers or validation_class_methods standard plugins) in connection with option to check for typecast failures for columns that aren't blobs or strings."
  name: raise_on_typecast_failure
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Which columns are specifically restricted in a call to set/update/new/etc. (default: not set). Some columns are restricted regardless of this setting, such as the primary key column and columns in Model::RESTRICTED_SETTER_METHODS."
  name: restricted_columns
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Should be the literal primary key column name if this Model's table has a simple primary key, or nil if the model has a compound primary key or no primary key.
  name: simple_pk
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Should be the literal table name if this Model's dataset is a simple table (no select, order, join, etc.), or nil otherwise. This and simple_pk are used for an optimization in Model.[].
  name: simple_table
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Whether new/set/update and their variants should raise an error if an invalid key is used. A key is invalid if no setter method exists for that key or the access to the setter method is restricted (e.g. due to it being a primary key field). If set to false, silently skip any key where the setter method doesn't exist or access to it is restricted.
  name: strict_param_setting
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Whether to typecast the empty string ('') to nil for columns that are not string or blob. In most cases the empty string would be the way to specify a NULL SQL value in string form (nil.to_s == ''), and an empty string would not usually be typecast correctly for other types, so the default is true.
  name: typecast_empty_string_to_nil
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Whether to typecast attribute values on assignment (default: true). If set to false, no typecasting is done, so it will be left up to the database to typecast the value correctly."
  name: typecast_on_assignment
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Whether to use a transaction by default when saving/deleting records (default: true). If you are sending database queries in before_* or after_* hooks, you shouldn't change the default setting without a good reason."
  name: use_transactions
  rw: RW
class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Class methods for Sequel::Model that implement basic model functionality.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: All of the method names in Model::DATASET_METHODS have class methods created that call the Model's dataset with the method of the same name with the given arguments.
  type: :BULLET
constants: []

full_name: Sequel::Model::ClassMethods
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: "[]"
- !ruby/object:RI::MethodSummary 
  name: columns
- !ruby/object:RI::MethodSummary 
  name: create
- !ruby/object:RI::MethodSummary 
  name: dataset
- !ruby/object:RI::MethodSummary 
  name: dataset=
- !ruby/object:RI::MethodSummary 
  name: db
- !ruby/object:RI::MethodSummary 
  name: db=
- !ruby/object:RI::MethodSummary 
  name: db_schema
- !ruby/object:RI::MethodSummary 
  name: def_dataset_method
- !ruby/object:RI::MethodSummary 
  name: find
- !ruby/object:RI::MethodSummary 
  name: find_or_create
- !ruby/object:RI::MethodSummary 
  name: implicit_table_name
- !ruby/object:RI::MethodSummary 
  name: inherited
- !ruby/object:RI::MethodSummary 
  name: load
- !ruby/object:RI::MethodSummary 
  name: no_primary_key
- !ruby/object:RI::MethodSummary 
  name: primary_key_hash
- !ruby/object:RI::MethodSummary 
  name: restrict_primary_key
- !ruby/object:RI::MethodSummary 
  name: restrict_primary_key?
- !ruby/object:RI::MethodSummary 
  name: set_allowed_columns
- !ruby/object:RI::MethodSummary 
  name: set_dataset
- !ruby/object:RI::MethodSummary 
  name: set_primary_key
- !ruby/object:RI::MethodSummary 
  name: set_restricted_columns
- !ruby/object:RI::MethodSummary 
  name: subset
- !ruby/object:RI::MethodSummary 
  name: table_name
- !ruby/object:RI::MethodSummary 
  name: unrestrict_primary_key
name: ClassMethods
superclass: 
