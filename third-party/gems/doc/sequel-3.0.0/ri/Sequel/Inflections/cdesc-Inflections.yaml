--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: plurals
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: singulars
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: uncountables
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: clear
- !ruby/object:RI::MethodSummary 
  name: irregular
- !ruby/object:RI::MethodSummary 
  name: plural
- !ruby/object:RI::MethodSummary 
  name: singular
- !ruby/object:RI::MethodSummary 
  name: uncountable
comment: 
- !ruby/struct:SM::Flow::P 
  body: "This module acts as a singleton returned/yielded by Sequel.inflections, which is used to override or specify additional inflection rules for Sequel. Examples:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Sequel.inflections do |inflect|\n    inflect.plural /^(ox)$/i, '\\1\\2en'\n    inflect.singular /^(ox)en/i, '\\1'\n\n    inflect.irregular 'octopus', 'octopi'\n\n    inflect.uncountable &quot;equipment&quot;\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may already have been loaded.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: CAMELIZE_CONVERT_REGEXP
  value: /(^|_)(.)/.freeze
- !ruby/object:RI::Constant 
  comment: 
  name: CAMELIZE_MODULE_REGEXP
  value: /\/(.?)/.freeze
- !ruby/object:RI::Constant 
  comment: 
  name: DASH
  value: "'-'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: DEMODULIZE_CONVERT_REGEXP
  value: /^.*::/.freeze
- !ruby/object:RI::Constant 
  comment: 
  name: EMPTY_STRING
  value: "''.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: SLASH
  value: "'/'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: VALID_CONSTANT_NAME_REGEXP
  value: /\A(?:::)?([A-Z]\w*(?:::[A-Z]\w*)*)\z/.freeze
- !ruby/object:RI::Constant 
  comment: 
  name: UNDERSCORE
  value: "'_'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: UNDERSCORE_CONVERT_REGEXP1
  value: /([A-Z]+)([A-Z][a-z])/.freeze
- !ruby/object:RI::Constant 
  comment: 
  name: UNDERSCORE_CONVERT_REGEXP2
  value: /([a-z\d])([A-Z])/.freeze
- !ruby/object:RI::Constant 
  comment: 
  name: UNDERSCORE_CONVERT_REPLACE
  value: "'\\1_\\2'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: UNDERSCORE_MODULE_REGEXP
  value: /::/.freeze
full_name: Sequel::Inflections
includes: []

instance_methods: []

name: Inflections
superclass: 
