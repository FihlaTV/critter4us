--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: The purpose of this class is to allow the easy creation of SQL identifiers and functions without relying on methods defined on Symbol. This is useful if another library defines the methods defined by Sequel, or if you are running on ruby 1.9.
- !ruby/struct:SM::Flow::P 
  body: An instance of this class is yielded to the block supplied to filter, order, and select. If Sequel.virtual_row_instance_eval is true and the block doesn't take an argument, the block is instance_evaled in the context of a new instance of this class.
- !ruby/struct:SM::Flow::P 
  body: "Examples:"
- !ruby/struct:SM::Flow::VERB 
  body: "  ds = DB[:t]\n  ds.filter{|r| r.name &lt; 2} # SELECT * FROM t WHERE (name &lt; 2)\n  ds.filter{|r| r.table__column + 1 &lt; 2} # SELECT * FROM t WHERE ((table.column + 1) &lt; 2)\n  ds.filter{|r| r.is_active(1, 'arg2')} # SELECT * FROM t WHERE is_active(1, 'arg2')\n"
constants: []

full_name: Sequel::SQL::VirtualRow
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: method_missing
name: VirtualRow
superclass: BasicObject
